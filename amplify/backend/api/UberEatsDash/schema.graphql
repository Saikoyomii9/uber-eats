type NewRestaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  image: String!
  adminSub: String
  NewDishes: [NewDish] @hasMany(indexName: "byNewRestaurant", fields: ["id"])
}

type NewDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  description: String!
  image: String
  price: Float!
  newrestaurantID: ID! @index(name: "byNewRestaurant")
}

type OrderDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  orderID: ID! @index(name: "byOrder")
  NewDish: NewDish @hasOne
}

enum OrderStatus {
  PENDING
  ACCEPTED
  DECLINED
  COMPLETED
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  total: Float!
  status: OrderStatus!
  userID: ID! @index(name: "byUser")
  OrderDishes: [OrderDish] @hasMany(indexName: "byOrder", fields: ["id"])
  NewRestaurant: NewRestaurant @hasOne
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  sub: String!
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
}
 